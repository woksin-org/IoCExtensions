name: DotNET - Reusable - Build 

env:
  NUGET_OUTPUT: Artifacts/NuGet

on:
  workflow_call: 
    inputs:
      working-directory:
        description: The working directory to release from
        type: string
        required: true
      dotnet-version:
        description: The list of versions of .NET to build with
        type: string
        default: |
          7.0.x
      library-name:
        description: The base name of the library to be released. MUST NOT contain spaces or characaters not allowed in github tags
        type: string
        required: true
      run-benchmarks:
        description: Whether to run benchmarks
        type: boolean
        default: false
      benchmarks:
        description: JSON array of which benchmarks to run
        type: string
        default: ''

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup .Net
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
      - name: Build
        working-directory: ${{inputs.working-directory}}
        run: dotnet build --configuration Release
  
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - name: Setup .Net
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
      - name: Test
        working-directory: ${{inputs.working-directory}}
        run: dotnet test --logger "trx;LogFileName=test-results.trx" --configuration Release
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: ${{ inputs.library-name }} Test Report
          working-directory: ${{ inputs.working-directory }}
          path: Tests/**/TestResults/*.trx
          reporter: dotnet-trx
  
  benchmarks:
    name: Benchmarks
    runs-on: ubuntu-latest
    if: ${{ inputs.run-benchmarks == 'true' }} && ${{github.ref_name == 'main'}} && ${{ github.event_name != 'pull_request' }}
    strategy:
      matrix:
        benchmark: ${{ fromJson(inputs.benchmarks) }}
    env:
      BENCHMARK_NAME: ${{ inputs.library-name }}.Benchmarks.${{ matrix.benchmark }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup .Net
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
      - name: Run Benchmarks
        working-directory: ${{ inputs.working-directory }}/Benchmarks
        run: dotnet run --configuration Release -- --exporters json -m --filter '${{ env.BENCHMARK_NAME }}'
      - name: Store benchmark result
        uses: rhysd/github-action-benchmark@v1
        with:
          name: ${{ inputs.library-name }} Benchmarks
          tool: 'benchmarkdotnet'
          output-file-path: ${{ inputs.working-directory }}/Benchmarks/BenchmarkDotNet.Artifacts/results/${{ env.BENCHMARK_NAME }}-report-full-compressed.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          alert-threshold: '200%'
          comment-on-alert: true
          alert-comment-cc-users: '@woksin'
          
